(function(){"use strict";function EventEmitter(){}var proto=EventEmitter.prototype;var exports=this;var originalGlobalValue=exports.EventEmitter;function indexOfListener(listeners,listener){var i=listeners.length;while(i--){if(listeners[i].listener===listener){return i}}return-1}function alias(name){return function aliasClosure(){return this[name].apply(this,arguments)}}proto.getListeners=function getListeners(evt){var events=this._getEvents();var response;var key;if(typeof evt==="object"){response={};for(key in events){if(events.hasOwnProperty(key)&&evt.test(key)){response[key]=events[key]}}}else{response=events[evt]||(events[evt]=[])}return response};proto.flattenListeners=function flattenListeners(listeners){var flatListeners=[];var i;for(i=0;i<listeners.length;i+=1){flatListeners.push(listeners[i].listener)}return flatListeners};proto.getListenersAsObject=function getListenersAsObject(evt){var listeners=this.getListeners(evt);var response;if(listeners instanceof Array){response={};response[evt]=listeners}return response||listeners};proto.addListener=function addListener(evt,listener){var listeners=this.getListenersAsObject(evt);var listenerIsWrapped=typeof listener==="object";var key;for(key in listeners){if(listeners.hasOwnProperty(key)&&indexOfListener(listeners[key],listener)===-1){listeners[key].push(listenerIsWrapped?listener:{listener:listener,once:false})}}return this};proto.on=alias("addListener");proto.addOnceListener=function addOnceListener(evt,listener){return this.addListener(evt,{listener:listener,once:true})};proto.once=alias("addOnceListener");proto.defineEvent=function defineEvent(evt){this.getListeners(evt);return this};proto.defineEvents=function defineEvents(evts){for(var i=0;i<evts.length;i+=1){this.defineEvent(evts[i])}return this};proto.removeListener=function removeListener(evt,listener){var listeners=this.getListenersAsObject(evt);var index;var key;for(key in listeners){if(listeners.hasOwnProperty(key)){index=indexOfListener(listeners[key],listener);if(index!==-1){listeners[key].splice(index,1)}}}return this};proto.off=alias("removeListener");proto.addListeners=function addListeners(evt,listeners){return this.manipulateListeners(false,evt,listeners)};proto.removeListeners=function removeListeners(evt,listeners){return this.manipulateListeners(true,evt,listeners)};proto.manipulateListeners=function manipulateListeners(remove,evt,listeners){var i;var value;var single=remove?this.removeListener:this.addListener;var multiple=remove?this.removeListeners:this.addListeners;if(typeof evt==="object"&&!(evt instanceof RegExp)){for(i in evt){if(evt.hasOwnProperty(i)&&(value=evt[i])){if(typeof value==="function"){single.call(this,i,value)}else{multiple.call(this,i,value)}}}}else{i=listeners.length;while(i--){single.call(this,evt,listeners[i])}}return this};proto.removeEvent=function removeEvent(evt){var type=typeof evt;var events=this._getEvents();var key;if(type==="string"){delete events[evt]}else if(type==="object"){for(key in events){if(events.hasOwnProperty(key)&&evt.test(key)){delete events[key]}}}else{delete this._events}return this};proto.removeAllListeners=alias("removeEvent");proto.emitEvent=function emitEvent(evt,args){var listeners=this.getListenersAsObject(evt);var listener;var i;var key;var response;for(key in listeners){if(listeners.hasOwnProperty(key)){i=listeners[key].length;while(i--){listener=listeners[key][i];if(listener.once===true){this.removeListener(evt,listener.listener)}response=listener.listener.apply(this,args||[]);if(response===this._getOnceReturnValue()){this.removeListener(evt,listener.listener)}}}}return this};proto.trigger=alias("emitEvent");proto.emit=function emit(evt){var args=Array.prototype.slice.call(arguments,1);return this.emitEvent(evt,args)};proto.setOnceReturnValue=function setOnceReturnValue(value){this._onceReturnValue=value;return this};proto._getOnceReturnValue=function _getOnceReturnValue(){if(this.hasOwnProperty("_onceReturnValue")){return this._onceReturnValue}else{return true}};proto._getEvents=function _getEvents(){return this._events||(this._events={})};EventEmitter.noConflict=function noConflict(){exports.EventEmitter=originalGlobalValue;return EventEmitter};if(typeof define==="function"&&define.amd){define("eventEmitter/EventEmitter",[],function(){return EventEmitter})}else if(typeof module==="object"&&module.exports){module.exports=EventEmitter}else{this.EventEmitter=EventEmitter}}).call(this);(function(root,factory){"use strict";if(typeof define==="function"&&define.amd){define(["eventEmitter/EventEmitter","socket.io-client"],function(EventEmitter){return factory(window,EventEmitter,root.io)})}else if(typeof exports==="object"){module.exports=factory(window,require("wolfy87-eventemitter"),require("socket.io-client"))}else{root.SignallerPeerConnection=factory(window,root.EventEmitter,root.io)}})(this,function factory(window,EventEmitter,io){"use strict";function SignallerPeerConnection(options){this.peerConnections=[];if(navigator.mozGetUserMedia){this.iceServers={iceServers:[{url:"stun:23.21.150.121"}]}}else{this.iceServers={iceServers:[{url:"stun:stun.l.google.com:19302"}]}}this.constraints={mandatory:{OfferToReceiveAudio:true,OfferToReceiveVideo:true}};this.setupRTCObjects=function(){this.PeerConnection=window.RTCPeerConnection||window.mozRTCPeerConnection||window.webkitRTCPeerConnection;this.SessionDescription=window.RTCSessionDescription||window.mozRTCSessionDescription||window.webkitRTCSessionDescription;navigator.getUserMedia=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia;this.RTCIceCandidate=window.RTCIceCandidate||window.mozRTCIceCandidate};this.generateDefaults=function(options){options=options||{};options.server=options.server||"http://"+window.location.host+"/";options.room=options.room||"default";options.debug=options.debug||false;return options};this.bindEvents=function(){this.socket.on("initialized",this.getPeerList.bind(this));this.socket.on("list",this.generateConnections.bind(this));this.socket.on("offer",this.createAnswer.bind(this));this.socket.on("answer",this.handleAnswer.bind(this));this.socket.on("icecandidate",this.receiveIceCandidate.bind(this));this.socket.on("newconnection",this.addPeer.bind(this));this.socket.on("disconnect",this.disconnectConnection.bind(this));this.socket.on("peerconnected",this.peerConnected.bind(this));this.socket.on("streamremoved",this.removeRemoteStream.bind(this))};this.getPeerList=function(){this.socket.emit("list")};this.generateConnections=function(peers){if(options.debug)console.log("Received list, creating connection(s) for "+peers.length+" peers");peers.forEach(this.addPeer.bind(this))};this.addPeer=function(id,suppress){if(!this.hasPeer(id)){console.log("Adding peer: "+id);var peer={connection:new this.PeerConnection(this.iceServers),id:id};peer=this.bindConnectionEvents(peer,suppress);this.peerConnections.push(peer);if(this.localStream){this.addStreamToPeer(this.localStream,peer)}return peer}};this.bindConnectionEvents=function(peer,suppress){if(options.debug)console.log("Binding connection events for peer: "+peer.id);peer.connection.onicecandidate=function(candidate){if(options.debug&&options.debug==="verbose")console.log("Sending ICE candidate to "+peer.id);this.socket.emit("icecandidate",{target:peer.id,candidate:candidate})}.bind(this);peer.connection.onaddstream=function(event){if(options.debug)console.log("Remote stream added from "+peer.id);if(!suppress){this.emit("remoteStreamAdded",event.stream,peer.id)}else{if(options.debug)console.log("onaddstream event suppressed")}}.bind(this);peer.connection.ondatachannel=function(event){if(options.debug)console.log("Data channel added from "+peer.id);this.emit("dataChannelAdded",event.channel,peer.id)}.bind(this);return peer};this.createOffer=function(peer){if(options.debug)console.log("Creating offer for: "+peer.id);peer.connection.createOffer(function(offer){peer.connection.setLocalDescription(new this.SessionDescription(offer),this.sendOffer({target:peer.id,offer:offer}),this.logError)}.bind(this),this.logError,this.constraints)};this.sendOffer=function(offer){if(options.debug)console.log("Sending offer to "+offer.target);this.socket.emit("offer",offer)};this.createAnswer=function(data){var peer=this.getPeer(data.sender),offer=data.offer;if(options.debug)console.log("Creating answer for "+peer.id);peer.connection.setRemoteDescription(new this.SessionDescription(offer),function(){peer.connection.createAnswer(function(answer){peer.connection.setLocalDescription(new this.SessionDescription(answer),this.sendAnswer({target:peer.id,answer:answer}),this.logError)}.bind(this),this.logError,this.constraints)}.bind(this),this.logError)};this.sendAnswer=function(answer){if(options.debug)console.log("Sent answer to peer: "+answer.target);this.socket.emit("answer",answer)};this.handleAnswer=function(data){var peer=this.getPeer(data.sender),answer=data.answer;if(options.debug)console.log("Handling answer from: "+peer.id);peer.connection.setRemoteDescription(new this.SessionDescription(answer),function(){this.peerConnected(peer.id);this.socket.emit("peerconnected",peer.id)}.bind(this),this.logError)};this.peerConnected=function(id){this.emit("peerconnected",id);if(options.debug)console.log("Signaling with peer: "+id)};this.disconnectConnection=function(id){var peer=this.getPeer(id);peer.connection.close();this.emit("peerDisconnected",id);this.emit("remoteStreamRemoved",id);if(options.debug)console.log("Disconnected with peer: "+id);this.peerConnections.forEach(function(peer,index,peers){if(peer.id===id){peers.splice(index,1)}})};this.getPeer=function(id){var foundPeer;this.peerConnections.forEach(function(peer){if(peer.id===id){foundPeer=peer}});if(!foundPeer){foundPeer=this.addPeer(id)}return foundPeer};this.hasPeer=function(id){var foundPeer=false;this.peerConnections.forEach(function(peer){if(peer.id===id){foundPeer=true}});return foundPeer};this.logError=function(error){if(options.debug)console.error(error);else console.error("There was an error with the signaller")};this.addStream=function(stream){this.peerConnections.forEach(function(peer){this.addStreamToPeer(stream,peer)}.bind(this))};this.addStreamToPeer=function(stream,peer){if(options.debug)console.log("Stream added to "+peer.id);peer.connection.addStream(stream);this.createOffer(peer)};this.addLocalStream=function(opts){opts=opts||{};navigator.getUserMedia({audio:opts.audio||true,video:opts.video||true},function(stream){this.localStream=stream;this.addStream(stream);this.emit("localStreamAdded",stream);if(options.debug)console.log("Local stream added")}.bind(this),this.logError)};this.removeLocalStream=function(){this.localStream.stop();this.localStream=undefined;this.peerConnections.forEach(function(peer){if(options.debug)console.log("Local stream removed from "+peer.id);this.socket.emit("streamremoved",peer.id);this.regenStream(peer,true)}.bind(this));this.emit("localStreamRemoved")};this.removeRemoteStream=function(id){this.emit("remoteStreamRemoved",id);if(options.debug)console.log("Removing stream from: "+id);this.regenStream(this.getPeer(id))};this.regenStream=function(peer,suppress){if(options.debug)console.log("Regenerating PeerConnection for "+peer.id);suppress=suppress&&peer.connection.getRemoteStreams().length;peer.connection=new this.PeerConnection(this.iceServers);this.bindConnectionEvents(peer,suppress);if(this.localStream){this.addStreamToPeer(this.localStream,peer)}};this.receiveIceCandidate=function(data){if(data&&data.candidate&&data.candidate.candidate&&data.candidate.candidate.candidate){var peer=this.getPeer(data.sender),candidate=data.candidate.candidate.candidate,line=data.candidate.candidate.sdpMLineIndex;if(options.debug&&options.debug==="verbose")console.log("Added ICE candidate from "+peer.id);peer.connection.addIceCandidate(new this.RTCIceCandidate({candidate:candidate,sdpMLineIndex:line}))}};this.setupRTCObjects();options=this.generateDefaults(options);this.socket=io(options.server+options.room);this.bindEvents()}SignallerPeerConnection.prototype=new EventEmitter;return SignallerPeerConnection});